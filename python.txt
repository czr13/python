python:
区分大小写
input():输入
print():输出

16进制：Ox 前缀和0-9,a-f

转义字符
如果字符串内部有很多换行，用\n 写在一行里不好阅读，为了简化，
Python 允许用'''...'''的格式表示多行内容，可以自己试试： 

>>> print('''line1
 ... line2
 ... line3''') 
line1 line2 line3 

布尔值：True和False

布尔值可以用 and、or 和 not 运算

例：5>3 and 3>1

True


空值 
空值是 Python 里一个特殊的值，用 None 表示。None 不能理解为 0，因
为 0 是有意义的，而 None 是一个特殊的空值。 

变量在程序中就是用一个变量名表示了，变量名必须是大小写英文、数
字和_的组合，且不能用数字开头

常量 
所谓常量就是不能变的变量，比如常用的数学常数 π 就是一个常量。在
Python 中，通常用全部大写的变量名表示常量： 
PI = 3.14159265359 
但事实上 PI 仍然是一个变量，Python 根本没有任何机制保证 PI 不会被
改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法


注：

/除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数：
 
>>> 9 / 3 3.0 
还有一种除法是//，称为地板除，两个整数的除法仍然是整数： 
>>> 10 // 3 3


ord()：获取字符的整数表示
chr()，编码转换为对应的字符


编码的转换
>>> 'ABC'.encode('ascii') 
b'ABC' 

>>> '中文'.encode('utf-8')
 b'\xe4\xb8\xad\xe6\x96\x87' 



list 
Python 内置的一种数据类型是列表：list。list 是一种有序的集合，可以
随时添加和删除其中的元素

比如，列出班里所有同学的名字，就可以用一个 list 表示： 
>>> classmates = ['Michael', 'Bob', 'Tracy'] 
>>> classmates ['Michael', 'Bob', 'Tracy'] 
变量 classmates 就是一个 list



for in 循环
names = ['Michael', 'Bob', 'Tracy']
for name in names:    
    print(name) 

while 循环

dict 和json差不多，快速查找

>>> d = {'Michael': 95, 'Bob': 75, 'Tracy': 85} 
>>> d['Michael']
95 


要避免 key 不存在的错误，有两种办法，一是通过 in 判断 key 是否存在：
 
>>> 'Thomas' in d
 False 

要删除一个 key，用 pop(key)方法，对应的 value 也会从 dict 中删除： 
>>> d.pop('Bob') 


set 
set 和 dict 类似，也是一组 key 的集合，但不存储 value。由于 key 不能
重复，所以，在 set 中，没有重复的 key。 
要创建一个 set，需要提供一个 list 作为输入集合： 
>>> s = set([1, 2, 3]) 
>>> s {1, 2, 3} 

重复的元素在set中自动被过滤


通过 add(key)方法可以添加元素到 set 中，可以重复添加，但不会有效
果： 
>>> s.add(4)
>>> s {1, 2, 3, 4} 
>>> s.add(4) 
>>> s {1, 2, 3, 4} 
通过 remove(key)方法可以删除元素： 
>>> s.remove(4) >>> s {1, 2, 3}